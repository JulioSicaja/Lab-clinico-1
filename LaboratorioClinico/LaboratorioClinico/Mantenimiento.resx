<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Btn_expedientep.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>