<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAA5sAAAObATzfBzEAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAPfElEQVR4Xu2d+XMUZRrHpaDcH3TZn9yfLKz9H6xaqxbNwUIoRFwVEQQJJBwawmFC5AhyJeSeJOTA
        QJAjEM4looRbhCUiAqtQQG1JeS0eoILIqoULbPHu87QZ7On+9kx3T/e878w0VR+Fp+/n+53ut/u97hFC
        pByDd63uTzxMjCWWEp3EbqKHOEN8RlwhbvbCf+cYL+N1eF3ehrflffC++qNjJTswmEyQMPcROUQ1cZi4
        RAif4H3zMfhYfMz70DklEzCoMpT0e4lsopw4RtwikFiJgI/N51BG8Dndi85ZZWBQRSi5jxCtxPcEEkMF
        +Nz4HB9B16AiMKgKlMiHiAXEBQIlXGX4nPncH0LXpgowKBtKGhe6uog7BEpuMsHXwNfyMLpW2cCgLChJ
        jxL7CJTIVICv7VF07bKAwURDSRlEHO1NUjrA1zoI5SLRwGCioCQ8SGzvTUo6wtf+IMpNooBBv6GL7kcU
        Ez8RKDHpBOeAc9EP5cpvYNBP6EIHEucIlIx0hnMyEOXMT2DQD+ji+hIVRCqU7P2Cc8M56oty6Acw6DV0
        Qfys52/s6KIDzHCuElI2gEEvoQsZRlztvbAA+3DOhqGcegkMegGdfB+iighu+e7h3HEO+6AcewEMxgud
        MFfYbCbQRQU4h3PpS0UTDMYDnej9xIHeEw/wDs7p/Sjn8QCDbqETfIA41XvCAd7DuX0A5d4tMOgGOrEB
        RDLW2iUbnOMBSAM3wKBT6IT4lx+Inzg4157cCWDQCXQi/MwPbvuJh3Med5kABu1CJ8Cl/aDAJw/OfVxv
        BzBoBzowv+cHr3ryYQ1cfyeAQTvQQfkDBTqhgMRThTSyAwzGgg7In3eDL3zqwFq4+mwMg9GgA3HFTvBt
        Xz1YE8cVSDBoBR2Aq3SDWj11YW0cVSXDoBW0c66rRgeWRs6OVeKJNc3i6aYGMaouJJ5qXS4eX98qBr/V
        DtdPAyqQdlbAIIJ2zC15lHruP7lyucgrrRGT5pl5YUmtGNa5Am6X4rBGtlsWwaAR2iG34VOqGdfomhAU
        Xk/+/BoxgkyCtk9xWCtbbQxh0AjtjBstogNJ4W9tTVBwRF5prRjS2QL3k+IUIy2NwKAe2hGX+pVpvZvz
        95WWt30rni+vEdnbqVwA9pfCsGYx3wpgUA/tRKl2+yPam6HIUaFHQebaunQ0wXakqR4YDEM74B47aMfS
        GNlQj0WOQU5brXhsfVqaIGoPJBgMQxsr111rdHUdFDgWjzfXaQZIQxMcRdqGgUGGNuSOmmiHUnmG3veR
        wLEYvOrXO0CamsCyQyoMMrSRkr10h69tgQJHI4/KAI+t+038NDTBPqQxA4O0AffPRzuSzpCdq0TuQiy0
        FSNrIn/9etLIBHB8AlOAoZV5QAO0EyV4vKNVK9kjsY1MILPwGwASP0yamKALaW0K0Io8LIvyVb1PtTZq
        X/qQ6GH4TpHThkU3kgYmYE1Nw9VE/IOhlXhcG7QD5cjpaBLjlpLYBiOwMZ6tjv3LN5IGJlhg1DviHwyt
        lFSte7O2tWhCD32tVgxvqhVDVtaJDFDgs0uKm+CCUe+If9AKPBQb2lBp2ARITLekuAkihrAzGoDHuEMb
        KU9gAtus0GuuF5+beKs8CGNMAhPYgjW+25RcbwAe6hRtoASju1vEgv2VovnQItEShab9paJp73wToT2l
        orBrqRi6sQaKbUWKmiAbGYDH3kUrS2NI92rx2qGF4rvTU8T/zud5wq1zeeLCqQIxncyABEekoAnKkQF4
        0GO0shRydzeJsycLoYhecPt8vtj+TrEYssH6K6GeFDPBsQgDUICHXJc56nYEI7rbxNcfToXCec2ufxRB
        wREpZALWWhvqPmwAHvserSiFN4+WQLH8omTnIig4IoVMkKM3AE+AgFZKOAV7Q1AkP7lMZYyM9fYeBUyK
        mKBabwCeBQOtlHC40GcU6MbZfK0kb4w75WMq/O04XAyXjdlSAcW2IgVMcFhvAD+nWXHEwWNFJnE2HSoR
        o0ggY9wpXPpn8S5+8KJp2eK3FppEjkWSm+CSZgD6C0+whFaQwqf/fMkkzstdSzw1ALoLrD9YYhLYDklu
        gv5sAKUaf6DS/9QdZZ4aYMPb5kLm1ndmm8S1SxKb4GE2AE+LhhZKIRkNwCSpCcayAXhuPLRQCslqACYJ
        TbCUDcATJKKFUkhmAzBJZoJONgDPkokWSiHZDcAkkQl2swGUGvAhFQzAJIkJetgAPF8uWiiFVDEAkwQm
        OMMG4EmT0UIppJIBGMVN8BkbgGfORgulkGoGYBQ2wRU2AE+fjhZKIRUNwChqgpuBAXqJZoCMdbUaaJkT
        FDSBZoDgEUCEDfDE6kqxuPoV0TVnijg6M1ecLXheXJw8UnwxaaQ4XzBG9MzKFTvnTBZLK0vEiHZnNYiM
        YibQHgFBIZA4tL5AvFM0QXyZ/4z42iZfkSmOvJwr5tTNdXSHUMgEWiEwrV8Db+wbL75bMAoK7ISemeNF
        QeOrJrGtUMQE2mtgen4IOpcnrreOgWLGw/oF00SWzbuBAibQPgSl3afgzXtniyvlz0EBveBgcZ4YtrrK
        JDhCsgm0T8FpVRk0eG2N+KjkeShcmCvL5okf39walas1C+G2YU4VjhNDX1feBFplkFLVwR+cmB4hGnfk
        eHpTpTcGOFmgle6RYHqub1krYv1hE6Bt9eydnScy1X4caNXBSjUIKTu4LEK0Y8dmagmKZYCDPS+LNw4X
        i3MnpsHlzOdtuVAoI14ZgGlfWGgS2woJJtAahCjVJGzIrnZR0l0u9h4tEg1754thG6u15MQywLity7T1
        2vbPhcv/2zNBe21DIhnx0gB8zAmtSyKEjkaCTaA1CVOqUWiYrC1NEYmJ1wBXK0dDgRBeGoDZT48C/bXE
        IoEm6K9cs3A9ehPEY4BfDoyHwljhtQEYJ98ImASY4Ndm4fwf+ocyHUOMhE0QjwGuhez/+hk/DNA1d0qE
        wHbw2QQRHUOU6RqGYBO4NgC9RVwutPfsD+OHAT6dMkoMWuu8QslHE0R0DVOqcyhiTFddpLAGrAzwyz5z
        yf+7xcXixsl3Lbl18TNN5Gh/bn/9Bdw2zJWKeabjzqovNQlsB59MENE5VKnu4Yixe1oihDViZYDrq8ea
        hLjawOMj+Pvn2sp603HbF003iWsXj00Q2T2coYBSA0QYcWuAa43m7/2yDLB9nvNygB4PTRA5QARDQeWG
        iNHj1gBXy80FQFkGeLtooklUp3hkAjhEjNKDRLk1wLfzzFW9sgzA9QNGQd3ggQngIFFKDxPn1gCorl+W
        Ad6b8YJJTLfEYQI8TBxDC5QdKNKtAb6vVucRsLsk3yRkPLg0AR4okqGFyg4V69YAP7SYq35lGWDT/BdN
        IsaLCxNYDxXL0ApKDhbt1gA/blTnNbC+bJZJQC9wYILog0UztJKSw8W7NcDN9yaYhLg8c4JmAit+PnKA
        UhH9z43jR+G2YS4X5ZuO+4KDWkGn2DSBreHilZwwwq0BmG/nPGsSIxp+fAr+cNpYk2heE8ME9iaMYGhF
        5aaMiccA/2mP3gTMiB8GaFvs/iugE6KYwN6UMQytrNykUfEY4NapieJSARYG4bUBPp/yrHjSRScSt1iY
        wP6kUQxtoNS0cfEYgLm+xlwYtMJrA6xYPMMkkt8YTOBs2jiGNlJq4sh4DXD7zETx1Qx7HUC8NMCFF5+z
        3TrYa3QmcD5xJEMbKjN1bLwGYD7uniwuTopdIPTKAF9OGum4JZDXZG9rfZdOF+rLwGAYSrwyk0d7YQDu
        F1BaMweKpccrAyyrKDYJkmgyOxu1en8rYFAPJV+J6eO9MgCv01A2CwoW5lLhOPHNnJeicnl69HaGK+Oo
        +/eKjA31O5GmemBQDyX/QeInvRgy8NIAzLzaueLfk501FbMDdyVfVPXK3eNIoyP0c9aW5gFIUz0waIQE
        KDYKkmiGd68SN4GoYcL9B5Z1vwqXM+FOJmHymheLDwvtvx3E4sy0sWJyk/25B/wkY2PDXKSlERg0QgL0
        I87pBZHBifdnQGHPn5h298K58egvZ/PhevV75kckieGevPys/ohK60hUO1yY+pyoon1ku2j06QcZHfX/
        GvRGWz+kpREYRJAAAwmpn4jH72kSl09Hdh69cmaKyN1WHpEAniHs1vlIE5w4Pl1kRpkUYujr1aKsskTs
        mZ2v3caR0Hp4xBDu8LGscra01zwL7mRuWp6JNETAoBUkQoVRlETz5FsrRMv++eLNI8Vixb654onOX2/9
        RiZtL9OGgOeh4ZfsWuhoRpCcNdViVkOpZojmJTPFhgUviY1EK/29nAQvqi9VTfTf6AjVIe2sgEErSIC+
        hPQBJf66cyXd5kI4AelMR+h41pamvkg7K2AwGiQAvxVc1Qsig8AEBjpC1zI3L49Z6jcCg7EgAYYR0quM
        AxPchZ/7I5BWsYBBO5AAVUZBZBCYoE5kbmoMIY3sAIN2oOT3ITbrxZBFWpugI7SDctAHaWQHGLQLHZib
        kh8ICyGTtDTBurrDA9srf4e0sQsMOoGSfz9xSi+GLNLKBB2h0/T/3yNNnACDTqHkP0Ao0Zo4HUyQ0VH/
        Cb3u/RFp4RQYdAMlfwARmMBn6Lo+yd7WYmrc6RYYdAsln+8EwePAP07T654nv/wwMBgPlHwuEwQFQ69Z
        V3tk4Oqq/ijn8QCD8ULJ57eD4BXRK+hV79E11XGV9q2AQS+g5PN3Av5YFHwxdM+dzM7GEF2D6/f8WMCg
        l9DJ82fjoO7AMaFrmZsaXX3edQIMeg0JwBVIQS2ibULv0y/fccWOG2DQD0gArkrm9gRSHwmKm+AOPe/r
        6HnvqEo3HmDQT0gEblkktXmZiibgZlyZm5dnoJz5CQz6DYnAbQy5oam01sbqmCD0MzfgtNuGz2tgMFGQ
        EFw2kNbvQLYJuN1+1uamhDzrrYDBRENicA8kKd3QpJigI3ScfvVRe+wkChiUBQnCHVIT3is5USagX/wh
        Kt1noWuXBQzKhkTh8Ql4kIqEvTH4Z4LQHfq178ra0vxndK2ygUFVIGF4uBoesyghtYwem+ATutUvzdra
        /Cd0baoAgypCAvEQdjyOoa+DWcZjArrF/0C/9lV0mx+IrkFFYFBlSCSuaOJhbXlsYx7g2vNRzm2bYF3d
        bfr/SRK+Omtby2Da9u4InMkCDCYTlHQe6p7nO+BJL3jmE0+mv0EmyOio/4Z+4T1EPYk+/C8rK+JukiUb
        GEx2SECeCIsLkjwlHs+LyJNj8gypXB/BcyXzhNk8azpPnc/w3znGy3gdXrdz0I7XyulXPpGEfyR7W8sf
        0LGSG3HP/wFSRyMKBp2HtAAAAABJRU5ErkJggg==
</value>
  </data>
</root>